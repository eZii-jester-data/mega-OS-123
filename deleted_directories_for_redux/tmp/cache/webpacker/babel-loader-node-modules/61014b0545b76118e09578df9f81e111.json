{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// import * as THREE from '../build/three.module.js';\nimport * as THREE from 'three';\nimport { OrbitControls } from './kmz/jsm/controls/OrbitControls.js';\nimport GltfLoadAnimatedObject from './eZii-bricklayer-game/gltf-load-animated-object.js'; // import * as Promise from \"bluebird\";\n\nvar EZIIBrickLayerGameMain =\n/*#__PURE__*/\nfunction () {\n  function EZIIBrickLayerGameMain() {\n    _classCallCheck(this, EZIIBrickLayerGameMain);\n\n    this.mixers = {};\n    var camera, scene, renderer;\n    var cube, cube2, cube3;\n    var gltf, background, envMap, mixer, gui, extensionControls, controls;\n    var clock = new THREE.Clock();\n  }\n\n  _createClass(EZIIBrickLayerGameMain, [{\n    key: \"findDomDockingPoint\",\n    value: function findDomDockingPoint() {\n      var notFound = true;\n      var i = 0;\n\n      while (notFound) {\n        var docking = document.body.querySelector('#docking-point-for-threejs');\n\n        if (!docking) {\n          i++;\n\n          if (i < 40) {\n            continue;\n          } else {\n            break;\n          }\n\n          ;\n        } else {\n          notFound = false;\n        }\n      }\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      scene = new THREE.Scene();\n      var geometry = new THREE.BoxGeometry(100, 100, 10);\n      var material = new THREE.MeshBasicMaterial({\n        color: 0x00ff00\n      }); // ยง\n\n      cube = new THREE.Mesh(geometry, material);\n      scene.add(cube);\n      var geometry2 = new THREE.BoxGeometry(100, 100, 10);\n      var material2 = new THREE.MeshBasicMaterial({\n        color: 0x0000ff\n      }); // ยง\n\n      cube2 = new THREE.Mesh(geometry2, material2);\n      scene.add(cube2);\n      scene.background = new THREE.Color(0x999999);\n      var light = new THREE.DirectionalLight(0xffffff);\n      light.position.set(0.5, 1.0, 0.5).normalize();\n      scene.add(light);\n      camera = new THREE.PerspectiveCamera(35, docking.clientWidth / docking.clientHeight, 1, 500);\n      camera.position.y = 5;\n      camera.position.z = 10;\n      scene.add(camera);\n      var grid = new THREE.GridHelper(50, 50, 0xffffff, 0x555555);\n      scene.add(grid);\n      renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(docking.clientWidth, docking.clientHeight);\n      docking.appendChild(renderer.domElement);\n      controls = new OrbitControls(camera, renderer.domElement); // controls.addEventListener( 'change', render );\n\n      controls.update();\n      window.addEventListener('resize', onWindowResize, false);\n    }\n  }, {\n    key: \"onWindowResize\",\n    value: function onWindowResize() {\n      camera.aspect = docking.clientWidth / docking.clientHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(docking.clientWidth, docking.clientHeight);\n      render();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      renderer.render(scene, camera);\n    }\n  }, {\n    key: \"moveObjectZAxis\",\n    value: function moveObjectZAxis(object) {\n      object.position.z += 10;\n    }\n  }, {\n    key: \"addObject\",\n    value: function () {\n      var _addObject = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id) {\n        var loadObject, promise;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                loadObject = new GltfLoadAnimatedObject(scene);\n                promise = new Promise(\n                /*#__PURE__*/\n                function () {\n                  var _ref = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee(resolve, reject) {\n                    var _ref2, _ref3, object, mixer;\n\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return loadObject.addObject(id);\n\n                          case 2:\n                            _ref2 = _context.sent;\n                            _ref3 = _slicedToArray(_ref2, 2);\n                            object = _ref3[0];\n                            mixer = _ref3[1];\n                            resolve([object, mixer, id]);\n\n                          case 7:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x3, _x4) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n                return _context2.abrupt(\"return\", promise);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function addObject(_x2) {\n        return _addObject.apply(this, arguments);\n      }\n\n      return addObject;\n    }()\n  }, {\n    key: \"animate\",\n    value: function (_animate) {\n      function animate(_x) {\n        return _animate.apply(this, arguments);\n      }\n\n      animate.toString = function () {\n        return _animate.toString();\n      };\n\n      return animate;\n    }(function (id) {\n      var _this = this;\n\n      debugger;\n      requestAnimationFrame(function (id) {\n        animate.bind(_this)(id);\n      });\n      if (this.mixers[id]) this.mixers[id].update(clock.getDelta());\n      controls.update();\n      render();\n    })\n  }]);\n\n  return EZIIBrickLayerGameMain;\n}();\n\nexport { EZIIBrickLayerGameMain as default };","map":{"version":3,"sources":["/Users/lemonandroid/Banal Dropbox/random/mega-os/ezii-os/app/javascript/packs/eZii-bricklayer-game/main.js"],"names":["THREE","OrbitControls","GltfLoadAnimatedObject","EZIIBrickLayerGameMain","mixers","camera","scene","renderer","cube","cube2","cube3","gltf","background","envMap","mixer","gui","extensionControls","controls","clock","Clock","notFound","i","docking","document","body","querySelector","Scene","geometry","BoxGeometry","material","MeshBasicMaterial","color","Mesh","add","geometry2","material2","Color","light","DirectionalLight","position","set","normalize","PerspectiveCamera","clientWidth","clientHeight","y","z","grid","GridHelper","WebGLRenderer","antialias","setPixelRatio","window","devicePixelRatio","setSize","appendChild","domElement","update","addEventListener","onWindowResize","aspect","updateProjectionMatrix","render","object","id","loadObject","promise","Promise","resolve","reject","addObject","requestAnimationFrame","animate","bind","getDelta"],"mappings":"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","sourcesContent":["\n// import * as THREE from '../build/three.module.js';\n\n\nimport * as THREE from 'three';\n\nimport { OrbitControls } from './kmz/jsm/controls/OrbitControls.js';\n\nimport GltfLoadAnimatedObject from './eZii-bricklayer-game/gltf-load-animated-object.js'\n// import * as Promise from \"bluebird\";\n\n\nexport default class EZIIBrickLayerGameMain {\n\tconstructor() {\n\t\tthis.mixers = {};\n\n\t\tvar camera, scene, renderer;\n\t\tvar cube, cube2, cube3;\n\t\tvar gltf, background, envMap, mixer, gui, extensionControls, controls;\n\t\tvar clock = new THREE.Clock();\n\t}\n\t\n\t\n\tfindDomDockingPoint() {\n\t\tvar notFound = true;\n\t\tvar i = 0;\n\t\twhile(notFound) {\n\t\t\tvar docking = document.body.querySelector('#docking-point-for-threejs');\n\t\t\tif(!docking) {\n\t\t\t\ti++;\n\t\t\t\tif (i < 40) { continue } else { break };\n\t\t\t} else {\n\t\t\t\tnotFound = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\tinit() {\n\n\t\tscene = new THREE.Scene();\n\t\n\t\tvar geometry = new THREE.BoxGeometry( 100, 100, 10 );\n\t\tvar material = new THREE.MeshBasicMaterial( {color: 0x00ff00} );\n\t\n\t\t// ยง\n\t\tcube = new THREE.Mesh( geometry, material );\n\t\tscene.add( cube );\n\t\n\t\tvar geometry2 = new THREE.BoxGeometry( 100, 100, 10 );\n\t\tvar material2 = new THREE.MeshBasicMaterial( {color: 0x0000ff} );\n\t\n\t\t// ยง\n\t\tcube2 = new THREE.Mesh( geometry2, material2 );\n\t\tscene.add( cube2 );\n\t\n\t\tscene.background = new THREE.Color( 0x999999 );\n\t\tvar light = new THREE.DirectionalLight( 0xffffff );\n\t\tlight.position.set( 0.5, 1.0, 0.5 ).normalize();\n\t\tscene.add( light );\n\t\tcamera = new THREE.PerspectiveCamera( 35, docking.clientWidth / docking.clientHeight, 1, 500 );\n\t\tcamera.position.y = 5;\n\t\tcamera.position.z = 10;\n\t\tscene.add( camera );\n\t\tvar grid = new THREE.GridHelper( 50, 50, 0xffffff, 0x555555 );\n\t\tscene.add( grid );\n\t\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\t\trenderer.setPixelRatio( window.devicePixelRatio );\n\t\trenderer.setSize( docking.clientWidth, docking.clientHeight );\n\t\tdocking.appendChild( renderer.domElement );\n\t\n\n\t    controls = new OrbitControls( camera, renderer.domElement );\n\t\t// controls.addEventListener( 'change', render );\n\t\tcontrols.update();\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\t}\n\t\n\n\n\n\n\tonWindowResize() {\n\t\tcamera.aspect = docking.clientWidth / docking.clientHeight;\n\t\tcamera.updateProjectionMatrix();\n\t\trenderer.setSize( docking.clientWidth, docking.clientHeight );\n\t\trender();\n\t}\n\t\n\t\n\t\n\trender() {\n\t\trenderer.render( scene, camera );\n\t}\n\t\n\t\n\n\n\tmoveObjectZAxis(object) {\n\t\tobject.position.z += 10;\n\t}\n\t\n\t\n\n\n\tasync addObject(id) {\t\n\t\tvar loadObject = new GltfLoadAnimatedObject(scene)\n\t\t\n\t\tlet promise = new Promise(async function(resolve, reject) {\n\t\t\tlet [object, mixer] = await loadObject.addObject(id);\n\t\t\tresolve([object, mixer, id])\n\n\t\t});\n\t\t\n\t\treturn promise;\n\t}\n\t\n\t\n\t\n\tanimate(id) {\n\t\tdebugger;\t\n\t\t\n\t\t\t\trequestAnimationFrame( (id) => { animate.bind(this)(id) } );\n\t\t\t\tif ( this.mixers[id] ) this.mixers[id].update( clock.getDelta() );\n\t\t\t\tcontrols.update();\n\t\t\t\trender();\n\t}\n\t\n}"]},"metadata":{},"sourceType":"module"}