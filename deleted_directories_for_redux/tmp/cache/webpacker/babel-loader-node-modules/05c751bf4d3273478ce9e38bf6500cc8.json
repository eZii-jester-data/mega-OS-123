{"ast":null,"code":"// https://raw.githubusercontent.com/mrdoob/three.js/master/examples/jsm/loaders/KMZLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nimport { DefaultLoadingManager, FileLoader, Group, LoadingManager } from \"three\";\nimport * as JSZip from 'jszip';\nimport { ColladaLoader } from \"../loaders/ColladaLoader.js\";\n\nvar KMZLoader = function KMZLoader(manager) {\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n};\n\nKMZLoader.prototype = {\n  constructor: KMZLoader,\n  load: function load(url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setResponseType('arraybuffer');\n    loader.load(url, function (text) {\n      onLoad(scope.parse(text));\n    }, onProgress, onError);\n  },\n  setPath: function setPath(value) {\n    this.path = value;\n    return this;\n  },\n  parse: function parse(data) {\n    function findFile(url) {\n      for (var path in zip.files) {\n        if (path.substr(-url.length) === url) {\n          return zip.files[path];\n        }\n      }\n    }\n\n    var manager = new LoadingManager();\n    manager.setURLModifier(function (url) {\n      var image = findFile(url);\n\n      if (image) {\n        console.log('Loading', url);\n        var blob = new Blob([image.asArrayBuffer()], {\n          type: 'application/octet-stream'\n        });\n        return URL.createObjectURL(blob);\n      }\n\n      return url;\n    }); //\n\n    JSZip.loadAsync(data).then(function (zip) {\n      if (zip.files['doc.kml']) {\n        var xml = new DOMParser().parseFromString(zip.files['doc.kml'].asText(), 'application/xml');\n        var model = xml.querySelector('Placemark Model Link href');\n\n        if (model) {\n          var loader = new ColladaLoader(manager);\n          return loader.parse(zip.files[model.textContent].asText());\n        }\n      } else {\n        console.warn('KMZLoader: Missing doc.kml file.');\n\n        for (var path in zip.files) {\n          var extension = path.split('.').pop().toLowerCase();\n\n          if (extension === 'dae') {\n            var loader = new ColladaLoader(manager);\n            return loader.parse(zip.files[path].asText());\n          }\n        }\n      }\n\n      console.error('KMZLoader: Couldn\\'t find .dae file.');\n      return {\n        scene: new Group()\n      };\n    }); // eslint-disable-line no-undef\n  }\n};\nexport { KMZLoader };","map":{"version":3,"sources":["/Users/lemonandroid/Banal Dropbox/random/ezii-os/app/javascript/packs/kmz/jsm/loaders/KMZLoader.js"],"names":["DefaultLoadingManager","FileLoader","Group","LoadingManager","JSZip","ColladaLoader","KMZLoader","manager","undefined","prototype","constructor","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","text","parse","value","data","findFile","zip","files","substr","length","setURLModifier","image","console","log","blob","Blob","asArrayBuffer","type","URL","createObjectURL","loadAsync","then","xml","DOMParser","parseFromString","asText","model","querySelector","textContent","warn","extension","split","pop","toLowerCase","error","scene"],"mappings":"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","sourcesContent":["// https://raw.githubusercontent.com/mrdoob/three.js/master/examples/jsm/loaders/KMZLoader.js\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport {\n\tDefaultLoadingManager,\n\tFileLoader,\n\tGroup,\n\tLoadingManager\n} from \"three\";\n\n\nimport * as JSZip from 'jszip';\n\nimport { ColladaLoader } from \"../loaders/ColladaLoader.js\";\n\nvar KMZLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n};\n\nKMZLoader.prototype = {\n\n\tconstructor: KMZLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( text ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tparse: function ( data ) {\n\n\t\tfunction findFile( url ) {\n\n\t\t\tfor ( var path in zip.files ) {\n\n\t\t\t\tif ( path.substr( - url.length ) === url ) {\n\n\t\t\t\t\treturn zip.files[ path ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar manager = new LoadingManager();\n\t\tmanager.setURLModifier( function ( url ) {\n\n\t\t\tvar image = findFile( url );\n\n\t\t\tif ( image ) {\n\n\t\t\t\tconsole.log( 'Loading', url );\n\n\t\t\t\tvar blob = new Blob( [ image.asArrayBuffer() ], { type: 'application/octet-stream' } );\n\t\t\t\treturn URL.createObjectURL( blob );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t} );\n\n\t\t//\n\n\t\tJSZip.loadAsync( data ).then(function(zip) {\n\n\t\t\tif ( zip.files[ 'doc.kml' ] ) {\n\n\t\t\t\tvar xml = new DOMParser().parseFromString( zip.files[ 'doc.kml' ].asText(), 'application/xml' );\n\n\t\t\t\tvar model = xml.querySelector( 'Placemark Model Link href' );\n\n\t\t\t\tif ( model ) {\n\n\t\t\t\t\tvar loader = new ColladaLoader( manager );\n\t\t\t\t\treturn loader.parse( zip.files[ model.textContent ].asText() );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'KMZLoader: Missing doc.kml file.' );\n\n\t\t\t\tfor ( var path in zip.files ) {\n\n\t\t\t\t\tvar extension = path.split( '.' ).pop().toLowerCase();\n\n\t\t\t\t\tif ( extension === 'dae' ) {\n\n\t\t\t\t\t\tvar loader = new ColladaLoader( manager );\n\t\t\t\t\t\treturn loader.parse( zip.files[ path ].asText() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\n\t\t\tconsole.error( 'KMZLoader: Couldn\\'t find .dae file.' );\n\t\t\treturn { scene: new Group() };\n\t\t}); // eslint-disable-line no-undef\n\n\n\n\t}\n\n};\n\nexport { KMZLoader };"]},"metadata":{},"sourceType":"module"}