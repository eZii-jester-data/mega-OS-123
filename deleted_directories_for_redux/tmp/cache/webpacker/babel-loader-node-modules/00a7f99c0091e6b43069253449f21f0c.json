{"ast":null,"code":"// import * as THREE from '../build/three.module.js';\nimport * as THREE from 'three';\nimport { OrbitControls } from './kmz/jsm/controls/OrbitControls.js';\nvar notFound = true;\nvar i = 0;\n\nvar _loop2 = function _loop2() {\n  docking = document.body.querySelector('#docking-point-for-threejs');\n  console.log(docking);\n\n  if (!docking) {\n    i++;\n\n    if (i < 30) {\n      return \"continue\";\n    } else {\n      return \"break\";\n    }\n\n    ;\n  } else {\n    notFound = false;\n  }\n\n  init();\n\n  function init() {\n    scene = new THREE.Scene();\n    var geometry = new THREE.BoxGeometry(100, 100, 10);\n    var material = new THREE.MeshBasicMaterial({\n      color: 0x00ff00\n    }); // ยง\n\n    cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n    var geometry2 = new THREE.BoxGeometry(100, 100, 10);\n    var material2 = new THREE.MeshBasicMaterial({\n      color: 0x0000ff\n    }); // ยง\n\n    cube2 = new THREE.Mesh(geometry2, material2);\n    scene.add(cube2);\n    scene.background = new THREE.Color(0x999999);\n    var light = new THREE.DirectionalLight(0xffffff);\n    light.position.set(0.5, 1.0, 0.5).normalize();\n    scene.add(light);\n    camera = new THREE.PerspectiveCamera(35, docking.clientWidth / docking.clientHeight, 1, 500);\n    camera.position.y = 5;\n    camera.position.z = 10;\n    scene.add(camera);\n    var grid = new THREE.GridHelper(50, 50, 0xffffff, 0x555555);\n    scene.add(grid);\n    renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(docking.clientWidth, docking.clientHeight);\n    docking.appendChild(renderer.domElement);\n    var controls = new OrbitControls(camera, renderer.domElement);\n    controls.addEventListener('change', render);\n    controls.update();\n    window.addEventListener('resize', onWindowResize, false);\n  }\n\n  function onWindowResize() {\n    camera.aspect = docking.clientWidth / docking.clientHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(docking.clientWidth, docking.clientHeight);\n    render();\n  }\n\n  function render() {\n    renderer.render(scene, camera);\n  }\n\n  function moveObjectZAxis(object) {\n    object.position.z += 10;\n  }\n\n  moveObjectZAxis(cube2);\n  render();\n};\n\n_loop: while (notFound) {\n  var docking;\n  var camera, scene, renderer;\n  var cube, cube2, cube3;\n\n  var _ret = _loop2();\n\n  switch (_ret) {\n    case \"continue\":\n      continue;\n\n    case \"break\":\n      break _loop;\n  }\n}","map":{"version":3,"sources":["/Users/lemonandroid/Banal Dropbox/random/mega-os/ezii-os/app/javascript/packs/eZii-query-programming.js"],"names":["THREE","OrbitControls","notFound","i","docking","document","body","querySelector","console","log","init","scene","Scene","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","geometry2","material2","cube2","background","Color","light","DirectionalLight","position","set","normalize","camera","PerspectiveCamera","clientWidth","clientHeight","y","z","grid","GridHelper","renderer","WebGLRenderer","antialias","setPixelRatio","window","devicePixelRatio","setSize","appendChild","domElement","controls","addEventListener","render","update","onWindowResize","aspect","updateProjectionMatrix","moveObjectZAxis","object","cube3"],"mappings":"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","sourcesContent":["\n// import * as THREE from '../build/three.module.js';\nimport * as THREE from 'three';\nimport { OrbitControls } from './kmz/jsm/controls/OrbitControls.js';\n\nvar notFound = true;\nvar i = 0;\nwhile(notFound) {\n\tvar docking = document.body.querySelector('#docking-point-for-threejs');\n\tconsole.log(docking);\n\tif(!docking) {\n\t\ti++;\n\t\tif (i < 30) { continue } else { break };\n\t} else {\n\t\tnotFound = false;\n\t}\n\t\n\tvar camera, scene, renderer;\n\tvar cube, cube2, cube3;\n\tinit();\n\n\tfunction init() {\n\n\t\tscene = new THREE.Scene();\n\t\t\n\t\tvar geometry = new THREE.BoxGeometry( 100, 100, 10 );\n\t\tvar material = new THREE.MeshBasicMaterial( {color: 0x00ff00} );\n\t\t\n\t\t// ยง\n\t\tcube = new THREE.Mesh( geometry, material );\n\t\tscene.add( cube );\n\t\t\n\t\tvar geometry2 = new THREE.BoxGeometry( 100, 100, 10 );\n\t\tvar material2 = new THREE.MeshBasicMaterial( {color: 0x0000ff} );\n\t\t\n\t\t// ยง\n\t\tcube2 = new THREE.Mesh( geometry2, material2 );\n\t\tscene.add( cube2 );\n\t\t\n\t\tscene.background = new THREE.Color( 0x999999 );\n\t\tvar light = new THREE.DirectionalLight( 0xffffff );\n\t\tlight.position.set( 0.5, 1.0, 0.5 ).normalize();\n\t\tscene.add( light );\n\t\tcamera = new THREE.PerspectiveCamera( 35, docking.clientWidth / docking.clientHeight, 1, 500 );\n\t\tcamera.position.y = 5;\n\t\tcamera.position.z = 10;\n\t\tscene.add( camera );\n\t\tvar grid = new THREE.GridHelper( 50, 50, 0xffffff, 0x555555 );\n\t\tscene.add( grid );\n\t\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\t\trenderer.setPixelRatio( window.devicePixelRatio );\n\t\trenderer.setSize( docking.clientWidth, docking.clientHeight );\n\t\tdocking.appendChild( renderer.domElement );\n\t\t\n\n\t\tvar controls = new OrbitControls( camera, renderer.domElement );\n\t\tcontrols.addEventListener( 'change', render );\n\t\tcontrols.update();\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\t}\n\tfunction onWindowResize() {\n\t\tcamera.aspect = docking.clientWidth / docking.clientHeight;\n\t\tcamera.updateProjectionMatrix();\n\t\trenderer.setSize( docking.clientWidth, docking.clientHeight );\n\t\trender();\n\t}\n\tfunction render() {\n\t\trenderer.render( scene, camera );\n\t}\n\n\n\tfunction moveObjectZAxis(object) {\n\t\tobject.position.z += 10;\n\t}\n\n\tmoveObjectZAxis(cube2);\n\trender();\n}"]},"metadata":{},"sourceType":"module"}