{"ast":null,"code":"// import * as THREE from '../build/three.module.js';\nimport * as THREE from 'three';\nimport { GLTFLoader } from './gltf/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from './kmz/jsm/controls/OrbitControls.js';\n$(function () {\n  var notFound = true;\n  var i = 0;\n\n  var _loop2 = function _loop2() {\n    docking = document.body.querySelector('#docking-point-for-threejs');\n    console.log(docking);\n\n    if (!docking) {\n      i++;\n\n      if (i < 40) {\n        return \"continue\";\n      } else {\n        return \"break\";\n      }\n\n      ;\n    } else {\n      notFound = false;\n    }\n\n    init();\n\n    function init() {\n      scene = new THREE.Scene();\n      var geometry = new THREE.BoxGeometry(100, 100, 10);\n      var material = new THREE.MeshBasicMaterial({\n        color: 0x00ff00\n      }); // ยง\n\n      cube = new THREE.Mesh(geometry, material);\n      scene.add(cube);\n      var geometry2 = new THREE.BoxGeometry(100, 100, 10);\n      var material2 = new THREE.MeshBasicMaterial({\n        color: 0x0000ff\n      }); // ยง\n\n      cube2 = new THREE.Mesh(geometry2, material2);\n      scene.add(cube2);\n      scene.background = new THREE.Color(0x999999);\n      var light = new THREE.DirectionalLight(0xffffff);\n      light.position.set(0.5, 1.0, 0.5).normalize();\n      scene.add(light);\n      camera = new THREE.PerspectiveCamera(35, docking.clientWidth / docking.clientHeight, 1, 500);\n      camera.position.y = 5;\n      camera.position.z = 10;\n      scene.add(camera);\n      var grid = new THREE.GridHelper(50, 50, 0xffffff, 0x555555);\n      scene.add(grid);\n      renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(docking.clientWidth, docking.clientHeight);\n      docking.appendChild(renderer.domElement);\n      var controls = new OrbitControls(camera, renderer.domElement);\n      controls.addEventListener('change', render);\n      controls.update();\n      window.addEventListener('resize', onWindowResize, false);\n    }\n\n    function onWindowResize() {\n      camera.aspect = docking.clientWidth / docking.clientHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(docking.clientWidth, docking.clientHeight);\n      render();\n    }\n\n    function render() {\n      renderer.render(scene, camera);\n    }\n\n    function moveObjectZAxis(object) {\n      object.position.z += 10;\n    }\n\n    function addObject() {\n      var loadingManager = new THREE.LoadingManager();\n\n      loadingManager.getHandler = function (arg) {\n        console.log(arg);\n      };\n\n      var loader = new GLTFLoader(loadingManager); // manager.addHandler( /\\.tga$/i, new TGALoader() );\n\n      loader.load('/gltf_models/1.gltf', function (gltf) {\n        gltf.scene.position.y = 0.5;\n\n        if (animations && animations.length) {\n          mixer = new THREE.AnimationMixer(object);\n\n          for (var i = 0; i < animations.length; i++) {\n            var animation = animations[i]; // There's .3333 seconds junk at the tail of the Monster animation that\n            // keeps it from looping cleanly. Clip it at 3 seconds\n\n            if (sceneInfo.animationTime) {\n              animation.duration = sceneInfo.animationTime;\n            }\n\n            var action = mixer.clipAction(animation);\n            if (state.playAnimation) action.play();\n          }\n        }\n\n        scene.add(gltf.scene);\n        render();\n      }, // called while loading is progressing\n      function (xhr) {\n        console.log(xhr.loaded / xhr.total * 100 + '% loaded');\n      }, // called when loading has errors\n      function (error) {\n        console.log('An error happened');\n        console.log(error);\n      });\n    }\n\n    moveObjectZAxis(cube2);\n    render();\n    addObject();\n  };\n\n  _loop: while (notFound) {\n    var docking;\n    var camera, scene, renderer;\n    var cube, cube2, cube3;\n\n    var _ret = _loop2();\n\n    switch (_ret) {\n      case \"continue\":\n        continue;\n\n      case \"break\":\n        break _loop;\n    }\n  }\n});","map":{"version":3,"sources":["/Users/lemonandroid/Banal Dropbox/random/mega-os/ezii-os/app/javascript/packs/eZii-query-programming.js"],"names":["THREE","GLTFLoader","OrbitControls","$","notFound","i","docking","document","body","querySelector","console","log","init","scene","Scene","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","geometry2","material2","cube2","background","Color","light","DirectionalLight","position","set","normalize","camera","PerspectiveCamera","clientWidth","clientHeight","y","z","grid","GridHelper","renderer","WebGLRenderer","antialias","setPixelRatio","window","devicePixelRatio","setSize","appendChild","domElement","controls","addEventListener","render","update","onWindowResize","aspect","updateProjectionMatrix","moveObjectZAxis","object","addObject","loadingManager","LoadingManager","getHandler","arg","loader","load","gltf","animations","length","mixer","AnimationMixer","animation","sceneInfo","animationTime","duration","action","clipAction","state","playAnimation","play","xhr","loaded","total","error","cube3"],"mappings":"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","sourcesContent":["\n// import * as THREE from '../build/three.module.js';\n\n\nimport * as THREE from 'three';\nimport { GLTFLoader } from './gltf/jsm/loaders/GLTFLoader.js';\n\nimport { OrbitControls } from './kmz/jsm/controls/OrbitControls.js';\n$(function() {\n\t\n\t\n\t\n\tvar notFound = true;\n\tvar i = 0;\n\twhile(notFound) {\n\t\tvar docking = document.body.querySelector('#docking-point-for-threejs');\n\t\tconsole.log(docking);\n\t\tif(!docking) {\n\t\t\ti++;\n\t\t\tif (i < 40) { continue } else { break };\n\t\t} else {\n\t\t\tnotFound = false;\n\t\t}\n\t\n\t\tvar camera, scene, renderer;\n\t\tvar cube, cube2, cube3;\n\t\tinit();\n\n\t\tfunction init() {\n\n\t\t\tscene = new THREE.Scene();\n\t\t\n\t\t\tvar geometry = new THREE.BoxGeometry( 100, 100, 10 );\n\t\t\tvar material = new THREE.MeshBasicMaterial( {color: 0x00ff00} );\n\t\t\n\t\t\t// ยง\n\t\t\tcube = new THREE.Mesh( geometry, material );\n\t\t\tscene.add( cube );\n\t\t\n\t\t\tvar geometry2 = new THREE.BoxGeometry( 100, 100, 10 );\n\t\t\tvar material2 = new THREE.MeshBasicMaterial( {color: 0x0000ff} );\n\t\t\n\t\t\t// ยง\n\t\t\tcube2 = new THREE.Mesh( geometry2, material2 );\n\t\t\tscene.add( cube2 );\n\t\t\n\t\t\tscene.background = new THREE.Color( 0x999999 );\n\t\t\tvar light = new THREE.DirectionalLight( 0xffffff );\n\t\t\tlight.position.set( 0.5, 1.0, 0.5 ).normalize();\n\t\t\tscene.add( light );\n\t\t\tcamera = new THREE.PerspectiveCamera( 35, docking.clientWidth / docking.clientHeight, 1, 500 );\n\t\t\tcamera.position.y = 5;\n\t\t\tcamera.position.z = 10;\n\t\t\tscene.add( camera );\n\t\t\tvar grid = new THREE.GridHelper( 50, 50, 0xffffff, 0x555555 );\n\t\t\tscene.add( grid );\n\t\t\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\t\t\trenderer.setPixelRatio( window.devicePixelRatio );\n\t\t\trenderer.setSize( docking.clientWidth, docking.clientHeight );\n\t\t\tdocking.appendChild( renderer.domElement );\n\t\t\n\n\t\t\tvar controls = new OrbitControls( camera, renderer.domElement );\n\t\t\tcontrols.addEventListener( 'change', render );\n\t\t\tcontrols.update();\n\t\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\t\t}\n\t\tfunction onWindowResize() {\n\t\t\tcamera.aspect = docking.clientWidth / docking.clientHeight;\n\t\t\tcamera.updateProjectionMatrix();\n\t\t\trenderer.setSize( docking.clientWidth, docking.clientHeight );\n\t\t\trender();\n\t\t}\n\t\tfunction render() {\n\t\t\trenderer.render( scene, camera );\n\t\t}\n\n\n\t\tfunction moveObjectZAxis(object) {\n\t\t\tobject.position.z += 10;\n\t\t}\n\t\t\n\t\tfunction addObject() {\t\t\t\n\t\t\tlet loadingManager = new THREE.LoadingManager();\n\t\t\t\n\t\t\tloadingManager.getHandler = function(arg) { console.log(arg) }\n\t\t\t\n\t\t\t\n\t\t\tvar loader = new GLTFLoader(loadingManager);\n\t\t\t\n\t\t\t// manager.addHandler( /\\.tga$/i, new TGALoader() );\n\t\t\n\t\t\tloader.load( '/gltf_models/1.gltf', function ( gltf ) {\n\t\t\t\tgltf.scene.position.y = 0.5;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif ( animations && animations.length ) {\n\t\t\t\t\t\t\t\t\tmixer = new THREE.AnimationMixer( object );\n\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\t\t\t\t\t\t\t\t\t\tvar animation = animations[ i ];\n\t\t\t\t\t\t\t\t\t\t// There's .3333 seconds junk at the tail of the Monster animation that\n\t\t\t\t\t\t\t\t\t\t// keeps it from looping cleanly. Clip it at 3 seconds\n\t\t\t\t\t\t\t\t\t\tif ( sceneInfo.animationTime ) {\n\t\t\t\t\t\t\t\t\t\t\tanimation.duration = sceneInfo.animationTime;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvar action = mixer.clipAction( animation );\n\t\t\t\t\t\t\t\t\t\tif ( state.playAnimation ) action.play();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\tscene.add( gltf.scene );\n\t\t\t\trender();\n\t\t\t},\n\t\t\n\t\t\t// called while loading is progressing\n\t\t\tfunction ( xhr ) {\n\n\t\t\t\tconsole.log( ( xhr.loaded / xhr.total * 100 ) + '% loaded' );\n\n\t\t\t},\n\t\t\t// called when loading has errors\n\t\t\tfunction ( error ) {\n\n\t\t\t\tconsole.log( 'An error happened' );\n\t\t\t\tconsole.log( error );\n\t\t\t\t\n\n\t\t\t}\n\t\t\n\t\t );\n\t\t}\n\n\t\tmoveObjectZAxis(cube2);\n\t\trender();\n\t\t\n\t\t\n\t\taddObject()\n\t\t\n\t}\n});\n"]},"metadata":{},"sourceType":"module"}