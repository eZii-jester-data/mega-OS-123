{"ast":null,"code":"// This file is automatically compiled by Webpack, along with any other files\n// present in this directory. You're encouraged to place your actual application logic in\n// a relevant structure within app/javascript and only use these pack files to reference\n// that code so it'll be compiled.\nRails = require(\"@rails/ujs\");\nRails.start();\n\nrequire(\"turbolinks\").start();\n\nrequire(\"@rails/activestorage\").start();\n\nrequire(\"channels\");\n\ndocument.addEventListener(\"turbolinks:load\", function () {\n  var entityValueMarking = document.getElementById('entity-value-marking');\n  document.querySelectorAll('form[action=\"/wit_ai_parse_model_examples\"]').forEach(function (form) {\n    form.addEventListener('ajax:before', function (e) {\n      if (form.dataset.isComplete !== 'true') {\n        e.preventDefault();\n        entityValueMarking.style.display = 'block';\n        alert('Pls select the text that should be the extracted value for this property.');\n\n        var onFinalSelectionChange = function onFinalSelectionChange() {\n          var selection = document.getSelection();\n          console.log(selection);\n          var isConfirmed = confirm('Confirm this property value? ' + selection);\n          form.querySelector('input[name=\"wit_ai_parse_model_example[entity_value]\"]').value = selection;\n          form.dataset.isComplete = 'true'; // Rails.fire(form, 'submit');\n        };\n\n        var lastTimeStamp = 0;\n        document.addEventListener('selectionchange', function (e) {\n          setTimeout(function () {\n            if (e.timeStamp === lastTimeStamp) {\n              onFinalSelectionChange();\n            }\n          }, 1000);\n          lastTimeStamp = e.timeStamp;\n        });\n      }\n    });\n  });\n}); // Uncomment to copy all static images under ../images to the output folder and reference\n// them with the image_pack_tag helper in views (e.g <%= image_pack_tag 'rails.png' %>)\n// or the `imagePath` JavaScript helper below.\n//\n// const images = require.context('../images', true)\n// const imagePath = (name) => images(name, true)","map":{"version":3,"sources":["/Users/lemonandroid/Documents/banal-todo-1/app/javascript/packs/application.js"],"names":["Rails","require","start","document","addEventListener","entityValueMarking","getElementById","querySelectorAll","forEach","form","e","dataset","isComplete","preventDefault","style","display","alert","onFinalSelectionChange","selection","getSelection","console","log","isConfirmed","confirm","querySelector","value","lastTimeStamp","setTimeout","timeStamp"],"mappings":"AAAA;AACA;AACA;AACA;AAEAA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAAf;AACAD,KAAK,CAACE,KAAN;;AACAD,OAAO,CAAC,YAAD,CAAP,CAAsBC,KAAtB;;AACAD,OAAO,CAAC,sBAAD,CAAP,CAAgCC,KAAhC;;AACAD,OAAO,CAAC,UAAD,CAAP;;AAIAE,QAAQ,CAACC,gBAAT,CAA0B,iBAA1B,EAA6C,YAAU;AACnD,MAAIC,kBAAkB,GAAGF,QAAQ,CAACG,cAAT,CAAwB,sBAAxB,CAAzB;AAEAH,EAAAA,QAAQ,CAACI,gBAAT,CAA0B,6CAA1B,EAAyEC,OAAzE,CAAiF,UAASC,IAAT,EAAe;AAC5FA,IAAAA,IAAI,CAACL,gBAAL,CAAsB,aAAtB,EAAqC,UAASM,CAAT,EAAY;AAC7C,UAAGD,IAAI,CAACE,OAAL,CAAaC,UAAb,KAA4B,MAA/B,EAAuC;AACnCF,QAAAA,CAAC,CAACG,cAAF;AACAR,QAAAA,kBAAkB,CAACS,KAAnB,CAAyBC,OAAzB,GAAmC,OAAnC;AAEAC,QAAAA,KAAK,CAAC,2EAAD,CAAL;;AAEA,YAAIC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAW;AACpC,cAAIC,SAAS,GAAGf,QAAQ,CAACgB,YAAT,EAAhB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,cAAII,WAAW,GAAGC,OAAO,CAAC,kCAAkCL,SAAnC,CAAzB;AAEAT,UAAAA,IAAI,CAACe,aAAL,CAAmB,wDAAnB,EAA6EC,KAA7E,GAAqFP,SAArF;AACAT,UAAAA,IAAI,CAACE,OAAL,CAAaC,UAAb,GAA0B,MAA1B,CANoC,CAQpC;AACH,SATD;;AAWA,YAAIc,aAAa,GAAG,CAApB;AACAvB,QAAAA,QAAQ,CAACC,gBAAT,CAA0B,iBAA1B,EAA6C,UAACM,CAAD,EAAO;AAEhDiB,UAAAA,UAAU,CAAC,YAAW;AAClB,gBAAGjB,CAAC,CAACkB,SAAF,KAAgBF,aAAnB,EAAkC;AAC9BT,cAAAA,sBAAsB;AACzB;AACJ,WAJS,EAIP,IAJO,CAAV;AAOAS,UAAAA,aAAa,GAAGhB,CAAC,CAACkB,SAAlB;AACH,SAVD;AAWH;AACJ,KA/BD;AAgCH,GAjCD;AAkCH,CArCD,E,CAyCA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// This file is automatically compiled by Webpack, along with any other files\n// present in this directory. You're encouraged to place your actual application logic in\n// a relevant structure within app/javascript and only use these pack files to reference\n// that code so it'll be compiled.\n\nRails = require(\"@rails/ujs\")\nRails.start()\nrequire(\"turbolinks\").start()\nrequire(\"@rails/activestorage\").start()\nrequire(\"channels\")\n\n\n\ndocument.addEventListener(\"turbolinks:load\", function(){\n    var entityValueMarking = document.getElementById('entity-value-marking');\n\n    document.querySelectorAll('form[action=\"/wit_ai_parse_model_examples\"]').forEach(function(form) {\n        form.addEventListener('ajax:before', function(e) {\n            if(form.dataset.isComplete !== 'true') {\n                e.preventDefault();\n                entityValueMarking.style.display = 'block';\n\n                alert('Pls select the text that should be the extracted value for this property.');\n\n                let onFinalSelectionChange = function() {\n                    let selection = document.getSelection();\n                    console.log(selection);\n                    let isConfirmed = confirm('Confirm this property value? ' + selection);\n\n                    form.querySelector('input[name=\"wit_ai_parse_model_example[entity_value]\"]').value = selection;\n                    form.dataset.isComplete = 'true';\n\n                    // Rails.fire(form, 'submit');\n                }\n                \n                let lastTimeStamp = 0;\n                document.addEventListener('selectionchange', (e) => {\n\n                    setTimeout(function() {\n                        if(e.timeStamp === lastTimeStamp) {\n                            onFinalSelectionChange()\n                        } \n                    }, 1000)\n        \n                    \n                    lastTimeStamp = e.timeStamp;\n                });\n            }\n        })\n    });\n});\n\n\n\n// Uncomment to copy all static images under ../images to the output folder and reference\n// them with the image_pack_tag helper in views (e.g <%= image_pack_tag 'rails.png' %>)\n// or the `imagePath` JavaScript helper below.\n//\n// const images = require.context('../images', true)\n// const imagePath = (name) => images(name, true)\n"]},"metadata":{},"sourceType":"module"}