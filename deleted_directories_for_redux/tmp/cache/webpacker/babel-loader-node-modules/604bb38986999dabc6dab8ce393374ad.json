{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = stackHierarchy;\n\nfunction push(arr, val) {\n  arr.push(val);\n  return arr;\n}\n\nfunction tail(arr) {\n  return arr[arr.length - 1];\n}\n/**\n * Retireve the element's ancestors up to the configured level.\n * This is an internal function and is not to be used from the outside (nor can it, it is private)\n * @param element (Object) The elemen't whose ancestry we want to retrieve\n * @param depth (number) How deep to into the heirarchy to collect elements\n */\n\n\nfunction stackHierarchy(element, depth) {\n  if (depth <= 0) {\n    throw new Error(\"Simmer: An invalid depth of \" + depth + \" has been specified\");\n  }\n\n  return Array(depth - 1).fill().reduce(function (acc, val) {\n    return tail(acc).parent() ? push(acc, tail(acc).parent()) : acc;\n  }, [element]);\n}","map":null,"metadata":{},"sourceType":"module"}