{"ast":null,"code":"// import * as THREE from '../build/three.module.js';\nimport * as THREE from 'three';\nimport { OrbitControls } from './kmz/jsm/controls/OrbitControls.js';\nimport { KMZLoader } from './kmz/jsm/loaders/KMZLoader.js';\ndocument.addEventListener(\"turbolinks:load\", function () {\n  var camera, scene, renderer;\n  var cube, cube2, cube3;\n  init();\n\n  function init() {\n    scene = new THREE.Scene();\n    var geometry = new THREE.BoxGeometry(100, 100, 10);\n    var material = new THREE.MeshBasicMaterial({\n      color: 0x00ff00\n    }); // ยง\n\n    cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n    var geometry2 = new THREE.BoxGeometry(100, 100, 10);\n    var material2 = new THREE.MeshBasicMaterial({\n      color: 0x0000ff\n    }); // ยง\n\n    cube2 = new THREE.Mesh(geometry2, material2);\n    scene.add(cube2);\n    scene.background = new THREE.Color(0x999999);\n    var light = new THREE.DirectionalLight(0xffffff);\n    light.position.set(0.5, 1.0, 0.5).normalize();\n    scene.add(light);\n    camera = new THREE.PerspectiveCamera(35, docking.innerWidth / docking.innerHeight, 1, 500);\n    camera.position.y = 5;\n    camera.position.z = 10;\n    scene.add(camera);\n    var grid = new THREE.GridHelper(50, 50, 0xffffff, 0x555555);\n    scene.add(grid);\n    renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(docking.innerWidth, docking.innerHeight);\n    docking.appendChild(renderer.domElement);\n    var controls = new OrbitControls(camera, renderer.domElement);\n    controls.addEventListener('change', render);\n    controls.update();\n    window.addEventListener('resize', onWindowResize, false);\n  }\n\n  function onWindowResize() {\n    camera.aspect = docking.innerWidth / docking.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(docking.innerWidth, docking.innerHeight);\n    render();\n  }\n\n  function render() {\n    renderer.render(scene, camera);\n  }\n\n  function moveObjectZAxis(object) {\n    object.position.z += 10;\n  }\n\n  moveObjectZAxis(cube2);\n  render();\n  var geometry = new THREE.TextGeometry('Hello three.js!', {\n    size: 80,\n    height: 5,\n    curveSegments: 12,\n    bevelEnabled: true,\n    bevelThickness: 10,\n    bevelSize: 8,\n    bevelOffset: 0,\n    bevelSegments: 5\n  }); // text = new THREE.TextGeometry( \"GitHub\", parameters );\n\n  scene.add(geometry);\n  render();\n  moveObjectZAxis(geometry);\n  moveObjectZAxis(geometry);\n  render();\n});","map":{"version":3,"sources":["/Users/lemonandroid/Banal Dropbox/random/ezii-os/app/javascript/packs/eZii-query-programming.js"],"names":["THREE","OrbitControls","KMZLoader","document","addEventListener","camera","scene","renderer","cube","cube2","cube3","init","Scene","geometry","BoxGeometry","material","MeshBasicMaterial","color","Mesh","add","geometry2","material2","background","Color","light","DirectionalLight","position","set","normalize","PerspectiveCamera","docking","innerWidth","innerHeight","y","z","grid","GridHelper","WebGLRenderer","antialias","setPixelRatio","window","devicePixelRatio","setSize","appendChild","domElement","controls","render","update","onWindowResize","aspect","updateProjectionMatrix","moveObjectZAxis","object","TextGeometry","size","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments"],"mappings":"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","sourcesContent":["\n// import * as THREE from '../build/three.module.js';\nimport * as THREE from 'three';\nimport { OrbitControls } from './kmz/jsm/controls/OrbitControls.js';\nimport { KMZLoader } from './kmz/jsm/loaders/KMZLoader.js';\n\n\ndocument.addEventListener(\"turbolinks:load\", function(){\n\n\tvar camera, scene, renderer;\n\tvar cube, cube2, cube3;\n\tinit();\n\n\tfunction init() {\n\n\t\tscene = new THREE.Scene();\n\t\t\n\t\tvar geometry = new THREE.BoxGeometry( 100, 100, 10 );\n\t\tvar material = new THREE.MeshBasicMaterial( {color: 0x00ff00} );\n\t\t\n\t\t// ยง\n\t\tcube = new THREE.Mesh( geometry, material );\n\t\tscene.add( cube );\n\t\t\n\t\tvar geometry2 = new THREE.BoxGeometry( 100, 100, 10 );\n\t\tvar material2 = new THREE.MeshBasicMaterial( {color: 0x0000ff} );\n\t\t\n\t\t// ยง\n\t\tcube2 = new THREE.Mesh( geometry2, material2 );\n\t\tscene.add( cube2 );\n\t\t\n\t\tscene.background = new THREE.Color( 0x999999 );\n\t\tvar light = new THREE.DirectionalLight( 0xffffff );\n\t\tlight.position.set( 0.5, 1.0, 0.5 ).normalize();\n\t\tscene.add( light );\n\t\tcamera = new THREE.PerspectiveCamera( 35, docking.innerWidth / docking.innerHeight, 1, 500 );\n\t\tcamera.position.y = 5;\n\t\tcamera.position.z = 10;\n\t\tscene.add( camera );\n\t\tvar grid = new THREE.GridHelper( 50, 50, 0xffffff, 0x555555 );\n\t\tscene.add( grid );\n\t\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\t\trenderer.setPixelRatio( window.devicePixelRatio );\n\t\trenderer.setSize( docking.innerWidth, docking.innerHeight );\n\t\tdocking.appendChild( renderer.domElement );\n\t\t\n\n\t\tvar controls = new OrbitControls( camera, renderer.domElement );\n\t\tcontrols.addEventListener( 'change', render );\n\t\tcontrols.update();\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\t}\n\tfunction onWindowResize() {\n\t\tcamera.aspect = docking.innerWidth / docking.innerHeight;\n\t\tcamera.updateProjectionMatrix();\n\t\trenderer.setSize( docking.innerWidth, docking.innerHeight );\n\t\trender();\n\t}\n\tfunction render() {\n\t\trenderer.render( scene, camera );\n\t}\n\n\n\tfunction moveObjectZAxis(object) {\n\t\tobject.position.z += 10;\n\t}\n\n\tmoveObjectZAxis(cube2);\n\trender();\n\n\n\n\tvar geometry = new THREE.TextGeometry( 'Hello three.js!', {\n\t\tsize: 80,\n\t\theight: 5,\n\t\tcurveSegments: 12,\n\t\tbevelEnabled: true,\n\t\tbevelThickness: 10,\n\t\tbevelSize: 8,\n\t\tbevelOffset: 0,\n\t\tbevelSegments: 5\n\t} );\n\n\t// text = new THREE.TextGeometry( \"GitHub\", parameters );\n\tscene.add(geometry);\n\trender();\n\n\tmoveObjectZAxis(geometry);\n\tmoveObjectZAxis(geometry);\n\n\trender();\n});"]},"metadata":{},"sourceType":"module"}