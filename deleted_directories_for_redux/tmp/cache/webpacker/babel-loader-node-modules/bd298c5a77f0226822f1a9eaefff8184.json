{"ast":null,"code":"// import * as THREE from '../build/three.module.js';\nimport * as THREE from 'three';\nimport { OrbitControls } from './kmz/jsm/controls/OrbitControls.js';\nimport { KMZLoader } from './kmz/jsm/loaders/KMZLoader.js';\nvar camera, scene, renderer;\nvar cube, cube2, cube3;\ninit();\n\nfunction init() {\n  docking = document.body.querySelector('#docking-point-for-threejs');\n  scene = new THREE.Scene();\n  var geometry = new THREE.BoxGeometry(100, 100, 10);\n  var material = new THREE.MeshBasicMaterial({\n    color: 0x00ff00\n  }); // ยง\n\n  cube = new THREE.Mesh(geometry, material);\n  scene.add(cube);\n  var geometry2 = new THREE.BoxGeometry(100, 100, 10);\n  var material2 = new THREE.MeshBasicMaterial({\n    color: 0x0000ff\n  }); // ยง\n\n  cube2 = new THREE.Mesh(geometry2, material2);\n  scene.add(cube2);\n  scene.background = new THREE.Color(0x999999);\n  var light = new THREE.DirectionalLight(0xffffff);\n  light.position.set(0.5, 1.0, 0.5).normalize();\n  scene.add(light);\n  camera = new THREE.PerspectiveCamera(35, docking.innerWidth / docking.innerHeight, 1, 500);\n  camera.position.y = 5;\n  camera.position.z = 10;\n  scene.add(camera);\n  var grid = new THREE.GridHelper(50, 50, 0xffffff, 0x555555);\n  scene.add(grid);\n  renderer = new THREE.WebGLRenderer({\n    antialias: true\n  });\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(docking.innerWidth, docking.innerHeight);\n  docking.appendChild(renderer.domElement);\n  var controls = new OrbitControls(camera, renderer.domElement);\n  controls.addEventListener('change', render);\n  controls.update();\n  window.addEventListener('resize', onWindowResize, false);\n}\n\nfunction onWindowResize() {\n  camera.aspect = docking.innerWidth / docking.innerHeight;\n  camera.updateProjectionMatrix();\n  renderer.setSize(docking.innerWidth, docking.innerHeight);\n  render();\n}\n\nfunction render() {\n  renderer.render(scene, camera);\n}\n\nfunction moveObjectZAxis(object) {\n  object.position.z += 10;\n}\n\nmoveObjectZAxis(cube2);\nrender();\nvar geometry = new THREE.TextGeometry('Hello three.js!', {\n  size: 80,\n  height: 5,\n  curveSegments: 12,\n  bevelEnabled: true,\n  bevelThickness: 10,\n  bevelSize: 8,\n  bevelOffset: 0,\n  bevelSegments: 5\n}); // text = new THREE.TextGeometry( \"GitHub\", parameters );\n\nscene.add(geometry);\nrender();\nmoveObjectZAxis(geometry);\nmoveObjectZAxis(geometry);\nrender();","map":{"version":3,"sources":["/Users/lemonandroid/Banal Dropbox/random/ezii-os/app/javascript/packs/eZii-query-programming.js"],"names":["THREE","OrbitControls","KMZLoader","camera","scene","renderer","cube","cube2","cube3","init","docking","document","body","querySelector","Scene","geometry","BoxGeometry","material","MeshBasicMaterial","color","Mesh","add","geometry2","material2","background","Color","light","DirectionalLight","position","set","normalize","PerspectiveCamera","innerWidth","innerHeight","y","z","grid","GridHelper","WebGLRenderer","antialias","setPixelRatio","window","devicePixelRatio","setSize","appendChild","domElement","controls","addEventListener","render","update","onWindowResize","aspect","updateProjectionMatrix","moveObjectZAxis","object","TextGeometry","size","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments"],"mappings":"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","sourcesContent":["\n// import * as THREE from '../build/three.module.js';\nimport * as THREE from 'three';\nimport { OrbitControls } from './kmz/jsm/controls/OrbitControls.js';\nimport { KMZLoader } from './kmz/jsm/loaders/KMZLoader.js';\n\nvar camera, scene, renderer;\nvar cube, cube2, cube3;\n\ninit();\n\nfunction init() {\n\n\tdocking = document.body.querySelector('#docking-point-for-threejs');\n\n\tscene = new THREE.Scene();\n\t\n\tvar geometry = new THREE.BoxGeometry( 100, 100, 10 );\n\tvar material = new THREE.MeshBasicMaterial( {color: 0x00ff00} );\n\t\n\t// ยง\n\tcube = new THREE.Mesh( geometry, material );\n    scene.add( cube );\n    \n    var geometry2 = new THREE.BoxGeometry( 100, 100, 10 );\n\tvar material2 = new THREE.MeshBasicMaterial( {color: 0x0000ff} );\n\t\n\t// ยง\n\tcube2 = new THREE.Mesh( geometry2, material2 );\n    scene.add( cube2 );\n\t\n\tscene.background = new THREE.Color( 0x999999 );\n\tvar light = new THREE.DirectionalLight( 0xffffff );\n\tlight.position.set( 0.5, 1.0, 0.5 ).normalize();\n\tscene.add( light );\n\tcamera = new THREE.PerspectiveCamera( 35, docking.innerWidth / docking.innerHeight, 1, 500 );\n\tcamera.position.y = 5;\n\tcamera.position.z = 10;\n\tscene.add( camera );\n\tvar grid = new THREE.GridHelper( 50, 50, 0xffffff, 0x555555 );\n\tscene.add( grid );\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( docking.innerWidth, docking.innerHeight );\n\tdocking.appendChild( renderer.domElement );\n\t\n\n\tvar controls = new OrbitControls( camera, renderer.domElement );\n\tcontrols.addEventListener( 'change', render );\n\tcontrols.update();\n\twindow.addEventListener( 'resize', onWindowResize, false );\n}\nfunction onWindowResize() {\n\tcamera.aspect = docking.innerWidth / docking.innerHeight;\n\tcamera.updateProjectionMatrix();\n\trenderer.setSize( docking.innerWidth, docking.innerHeight );\n\trender();\n}\nfunction render() {\n\trenderer.render( scene, camera );\n}\n\n\nfunction moveObjectZAxis(object) {\n    object.position.z += 10;\n}\n\nmoveObjectZAxis(cube2);\nrender();\n\n\n\nvar geometry = new THREE.TextGeometry( 'Hello three.js!', {\n    size: 80,\n    height: 5,\n    curveSegments: 12,\n    bevelEnabled: true,\n    bevelThickness: 10,\n    bevelSize: 8,\n    bevelOffset: 0,\n    bevelSegments: 5\n} );\n\n// text = new THREE.TextGeometry( \"GitHub\", parameters );\nscene.add(geometry);\nrender();\n\nmoveObjectZAxis(geometry);\nmoveObjectZAxis(geometry);\n\nrender();"]},"metadata":{},"sourceType":"module"}