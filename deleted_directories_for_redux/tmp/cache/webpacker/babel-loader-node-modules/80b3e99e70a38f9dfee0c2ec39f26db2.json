{"ast":null,"code":"// import * as THREE from '../build/three.module.js';\nimport * as THREE from 'three';\nimport { OrbitControls } from './kmz/jsm/controls/OrbitControls.js';\nimport GltfLoadAnimatedObject from './eZii-bricklayer-game/gltf-load-animated-object.js';\nvar mixers = {};\n$(function () {\n  var notFound = true;\n  var i = 0;\n\n  var _loop2 = function _loop2() {\n    docking = document.body.querySelector('#docking-point-for-threejs');\n    console.log(docking);\n\n    if (!docking) {\n      i++;\n\n      if (i < 40) {\n        return \"continue\";\n      } else {\n        return \"break\";\n      }\n\n      ;\n    } else {\n      notFound = false;\n    }\n\n    clock = new THREE.Clock();\n\n    function init() {\n      scene = new THREE.Scene();\n      var geometry = new THREE.BoxGeometry(100, 100, 10);\n      var material = new THREE.MeshBasicMaterial({\n        color: 0x00ff00\n      }); // ยง\n\n      cube = new THREE.Mesh(geometry, material);\n      scene.add(cube);\n      var geometry2 = new THREE.BoxGeometry(100, 100, 10);\n      var material2 = new THREE.MeshBasicMaterial({\n        color: 0x0000ff\n      }); // ยง\n\n      cube2 = new THREE.Mesh(geometry2, material2);\n      scene.add(cube2);\n      scene.background = new THREE.Color(0x999999);\n      var light = new THREE.DirectionalLight(0xffffff);\n      light.position.set(0.5, 1.0, 0.5).normalize();\n      scene.add(light);\n      camera = new THREE.PerspectiveCamera(35, docking.clientWidth / docking.clientHeight, 1, 500);\n      camera.position.y = 5;\n      camera.position.z = 10;\n      scene.add(camera);\n      var grid = new THREE.GridHelper(50, 50, 0xffffff, 0x555555);\n      scene.add(grid);\n      renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(docking.clientWidth, docking.clientHeight);\n      docking.appendChild(renderer.domElement);\n      controls = new OrbitControls(camera, renderer.domElement); // controls.addEventListener( 'change', render );\n\n      controls.update();\n      window.addEventListener('resize', onWindowResize, false);\n    }\n\n    function onWindowResize() {\n      camera.aspect = docking.clientWidth / docking.clientHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(docking.clientWidth, docking.clientHeight);\n      render();\n    }\n\n    function render() {\n      renderer.render(scene, camera);\n    }\n\n    function moveObjectZAxis(object) {\n      object.position.z += 10;\n    }\n\n    function addObject() {\n      var loadObject = new GltfLoadAnimatedObject(scene);\n      return loadObject.addObject(4);\n    }\n\n    function animate(object) {\n      requestAnimationFrame(function (object) {\n        animate(object);\n      });\n      if (mixers[object]) mixers[object].update(clock.getDelta());\n      controls.update();\n      render();\n    }\n\n    init();\n    moveObjectZAxis(cube2);\n    addObject(4).then(function (object, mixer, id) {\n      mixers[id] = mixer;\n      debugger;\n      animate(id);\n      window.mainObject.position.z = 20;\n    });\n  };\n\n  _loop: while (notFound) {\n    var docking;\n    var camera, scene, renderer;\n    var cube, cube2, cube3;\n    var gltf, background, envMap, mixer, gui, extensionControls, controls;\n    var clock;\n\n    var _ret = _loop2();\n\n    switch (_ret) {\n      case \"continue\":\n        continue;\n\n      case \"break\":\n        break _loop;\n    }\n  }\n});","map":{"version":3,"sources":["/Users/lemonandroid/Banal Dropbox/random/mega-os/ezii-os/app/javascript/packs/eZii-bricklayer-game-3.js"],"names":["THREE","OrbitControls","GltfLoadAnimatedObject","mixers","$","notFound","i","docking","document","body","querySelector","console","log","clock","Clock","init","scene","Scene","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","geometry2","material2","cube2","background","Color","light","DirectionalLight","position","set","normalize","camera","PerspectiveCamera","clientWidth","clientHeight","y","z","grid","GridHelper","renderer","WebGLRenderer","antialias","setPixelRatio","window","devicePixelRatio","setSize","appendChild","domElement","controls","update","addEventListener","onWindowResize","aspect","updateProjectionMatrix","render","moveObjectZAxis","object","addObject","loadObject","animate","requestAnimationFrame","getDelta","then","mixer","id","mainObject","cube3","gltf","envMap","gui","extensionControls"],"mappings":"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","sourcesContent":["\n// import * as THREE from '../build/three.module.js';\n\n\nimport * as THREE from 'three';\n\nimport { OrbitControls } from './kmz/jsm/controls/OrbitControls.js';\n\nimport GltfLoadAnimatedObject from './eZii-bricklayer-game/gltf-load-animated-object.js'\n\n\nvar mixers = {};\n$(function() {\n\t\n\t\n\t\n\tvar notFound = true;\n\tvar i = 0;\n\twhile(notFound) {\n\t\tvar docking = document.body.querySelector('#docking-point-for-threejs');\n\t\tconsole.log(docking);\n\t\tif(!docking) {\n\t\t\ti++;\n\t\t\tif (i < 40) { continue } else { break };\n\t\t} else {\n\t\t\tnotFound = false;\n\t\t}\n\t\n\t\tvar camera, scene, renderer;\n\t\tvar cube, cube2, cube3;\n\t\tvar gltf, background, envMap, mixer, gui, extensionControls, controls;\n\t\tvar clock = new THREE.Clock();\n\n\t\tfunction init() {\n\n\t\t\tscene = new THREE.Scene();\n\t\t\n\t\t\tvar geometry = new THREE.BoxGeometry( 100, 100, 10 );\n\t\t\tvar material = new THREE.MeshBasicMaterial( {color: 0x00ff00} );\n\t\t\n\t\t\t// ยง\n\t\t\tcube = new THREE.Mesh( geometry, material );\n\t\t\tscene.add( cube );\n\t\t\n\t\t\tvar geometry2 = new THREE.BoxGeometry( 100, 100, 10 );\n\t\t\tvar material2 = new THREE.MeshBasicMaterial( {color: 0x0000ff} );\n\t\t\n\t\t\t// ยง\n\t\t\tcube2 = new THREE.Mesh( geometry2, material2 );\n\t\t\tscene.add( cube2 );\n\t\t\n\t\t\tscene.background = new THREE.Color( 0x999999 );\n\t\t\tvar light = new THREE.DirectionalLight( 0xffffff );\n\t\t\tlight.position.set( 0.5, 1.0, 0.5 ).normalize();\n\t\t\tscene.add( light );\n\t\t\tcamera = new THREE.PerspectiveCamera( 35, docking.clientWidth / docking.clientHeight, 1, 500 );\n\t\t\tcamera.position.y = 5;\n\t\t\tcamera.position.z = 10;\n\t\t\tscene.add( camera );\n\t\t\tvar grid = new THREE.GridHelper( 50, 50, 0xffffff, 0x555555 );\n\t\t\tscene.add( grid );\n\t\t\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\t\t\trenderer.setPixelRatio( window.devicePixelRatio );\n\t\t\trenderer.setSize( docking.clientWidth, docking.clientHeight );\n\t\t\tdocking.appendChild( renderer.domElement );\n\t\t\n\n\t\t    controls = new OrbitControls( camera, renderer.domElement );\n\t\t\t// controls.addEventListener( 'change', render );\n\t\t\tcontrols.update();\n\t\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\t\t}\n\t\tfunction onWindowResize() {\n\t\t\tcamera.aspect = docking.clientWidth / docking.clientHeight;\n\t\t\tcamera.updateProjectionMatrix();\n\t\t\trenderer.setSize( docking.clientWidth, docking.clientHeight );\n\t\t\trender();\n\t\t}\n\t\t\n\t\tfunction render() {\n\t\t\trenderer.render( scene, camera );\n\t\t}\n\n\n\t\tfunction moveObjectZAxis(object) {\n\t\t\tobject.position.z += 10;\n\t\t}\n\t\t\n\t\tfunction addObject() {\t\n\t\t\tlet loadObject = new GltfLoadAnimatedObject(scene)\n\t\t\t\n\t\t\treturn loadObject.addObject(4);\n\t\t}\n\t\t\n\t\tfunction animate(object) {\n\t\t\t\t\trequestAnimationFrame( (object) => { animate(object) } );\n\t\t\t\t\tif ( mixers[object] ) mixers[object].update( clock.getDelta() );\n\t\t\t\t\tcontrols.update();\n\t\t\t\t\trender();\n\t\t}\n\n\t\tinit();\n\t\tmoveObjectZAxis(cube2);\n\t\t\n\t\taddObject(4).then(function(object, mixer, id) {\n\t\t\tmixers[id] = mixer;\n\t\t\t\n\t\t\tdebugger;\t\n\t\t\tanimate(id);\n\t\t\t\n\t\t\twindow.mainObject.position.z = 20;\n\t\t});\t\n\t}\n});\n"]},"metadata":{},"sourceType":"module"}