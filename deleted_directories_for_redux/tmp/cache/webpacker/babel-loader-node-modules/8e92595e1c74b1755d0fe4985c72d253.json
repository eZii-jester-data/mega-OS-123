{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport EZIIBrickLayerGameMain from './eZii-bricklayer-game/main.js';\n$(function () {\n  var main = new EZIIBrickLayerGameMain();\n  main.findDomDockingPoint().then(function () {\n    main.init();\n    main.moveObjectZAxis(main.cubes[1]);\n    main.addObject(4).then(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 3),\n          object = _ref2[0],\n          mixer = _ref2[1],\n          id = _ref2[2];\n\n      window.mainObject = object;\n      main.mixers[id] = mixer;\n      main.animate(id);\n      window.mainObject.position.z = 20;\n      main.every10MilliSeconds(function () {\n        window.mainObject.position.z += 0.1;\n      });\n    });\n    main.addObject(6).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          object = _ref4[0],\n          mixer = _ref4[1],\n          id = _ref4[2];\n\n      window.mainObject2 = object;\n      main.mixers[id] = mixer;\n      main.animate(id);\n      window.mainObject2.position.z = 20;\n    });\n    main.grid.on('click', function (ev) {\n      console.log(ev);\n      window.mainObject.position.x = ev.intersects[0].point.x;\n      window.mainObject.position.z = ev.intersects[0].point.z;\n    }); //\n    // $(document).on('click', function(evt) {\n    // \talert(main.getClicked3DPoint(evt));\n    // })\n  });\n});","map":{"version":3,"sources":["/Users/lemonandroid/Banal Dropbox/random/mega-os/ezii-os/app/javascript/packs/eZii-bricklayer-game-3.js"],"names":["EZIIBrickLayerGameMain","$","main","findDomDockingPoint","then","init","moveObjectZAxis","cubes","addObject","object","mixer","id","window","mainObject","mixers","animate","position","z","every10MilliSeconds","mainObject2","grid","on","ev","console","log","x","intersects","point"],"mappings":";;;;;;;;AAAA,OAAOA,sBAAP,MAAmC,gCAAnC;AAEAC,CAAC,CAAC,YAAW;AACZ,MAAIC,IAAI,GAAG,IAAIF,sBAAJ,EAAX;AACAE,EAAAA,IAAI,CAACC,mBAAL,GAA2BC,IAA3B,CAAgC,YAAW;AAC1CF,IAAAA,IAAI,CAACG,IAAL;AACAH,IAAAA,IAAI,CAACI,eAAL,CAAqBJ,IAAI,CAACK,KAAL,CAAW,CAAX,CAArB;AAEAL,IAAAA,IAAI,CAACM,SAAL,CAAe,CAAf,EAAkBJ,IAAlB,CAAuB,gBAA8B;AAAA;AAAA,UAApBK,MAAoB;AAAA,UAAZC,KAAY;AAAA,UAALC,EAAK;;AACpDC,MAAAA,MAAM,CAACC,UAAP,GAAoBJ,MAApB;AACAP,MAAAA,IAAI,CAACY,MAAL,CAAYH,EAAZ,IAAkBD,KAAlB;AAEAR,MAAAA,IAAI,CAACa,OAAL,CAAaJ,EAAb;AAEAC,MAAAA,MAAM,CAACC,UAAP,CAAkBG,QAAlB,CAA2BC,CAA3B,GAA+B,EAA/B;AAGAf,MAAAA,IAAI,CAACgB,mBAAL,CAAyB,YAAW;AACnCN,QAAAA,MAAM,CAACC,UAAP,CAAkBG,QAAlB,CAA2BC,CAA3B,IAAgC,GAAhC;AACA,OAFD;AAGA,KAZD;AAeAf,IAAAA,IAAI,CAACM,SAAL,CAAe,CAAf,EAAkBJ,IAAlB,CAAuB,iBAA8B;AAAA;AAAA,UAApBK,MAAoB;AAAA,UAAZC,KAAY;AAAA,UAALC,EAAK;;AACpDC,MAAAA,MAAM,CAACO,WAAP,GAAqBV,MAArB;AAEAP,MAAAA,IAAI,CAACY,MAAL,CAAYH,EAAZ,IAAkBD,KAAlB;AAEAR,MAAAA,IAAI,CAACa,OAAL,CAAaJ,EAAb;AAEAC,MAAAA,MAAM,CAACO,WAAP,CAAmBH,QAAnB,CAA4BC,CAA5B,GAAgC,EAAhC;AACA,KARD;AAWAf,IAAAA,IAAI,CAACkB,IAAL,CAAUC,EAAV,CAAa,OAAb,EAAsB,UAASC,EAAT,EAAa;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AAEAV,MAAAA,MAAM,CAACC,UAAP,CAAkBG,QAAlB,CAA2BS,CAA3B,GAA+BH,EAAE,CAACI,UAAH,CAAc,CAAd,EAAiBC,KAAjB,CAAuBF,CAAtD;AACAb,MAAAA,MAAM,CAACC,UAAP,CAAkBG,QAAlB,CAA2BC,CAA3B,GAA+BK,EAAE,CAACI,UAAH,CAAc,CAAd,EAAiBC,KAAjB,CAAuBV,CAAtD;AAEA,KAND,EA9B0C,CAwC1C;AACA;AACA;AACA;AACA,GA5CD;AA6CA,CA/CA,CAAD","sourcesContent":["import EZIIBrickLayerGameMain from './eZii-bricklayer-game/main.js';\n\n$(function() {\n\tvar main = new EZIIBrickLayerGameMain();\t\n\tmain.findDomDockingPoint().then(function() {\n\t\tmain.init();\n\t\tmain.moveObjectZAxis(main.cubes[1]);\n\t\n\t\tmain.addObject(4).then(function([object, mixer, id]) {\n\t\t\twindow.mainObject = object;\n\t\t\tmain.mixers[id] = mixer;\n\t\t\n\t\t\tmain.animate(id);\n\t\t\n\t\t\twindow.mainObject.position.z = 20;\n\t\t\t\n\t\t\t\n\t\t\tmain.every10MilliSeconds(function() {\n\t\t\t\twindow.mainObject.position.z += 0.1;\n\t\t\t})\n\t\t});\n\t\t\n\t\t\n\t\tmain.addObject(6).then(function([object, mixer, id]) {\n\t\t\twindow.mainObject2 = object;\n\t\t\t\n\t\t\tmain.mixers[id] = mixer;\n\t\t\n\t\t\tmain.animate(id);\n\t\t\n\t\t\twindow.mainObject2.position.z = 20;\n\t\t});\n\t\t\n\t\t\n\t\tmain.grid.on('click', function(ev) {\n\t\t\tconsole.log(ev);\n\t\t\t\n\t\t\twindow.mainObject.position.x = ev.intersects[0].point.x;\n\t\t\twindow.mainObject.position.z = ev.intersects[0].point.z\t;\n\t\t\t\n\t\t});\n\t\t\n\t\t\t\n\t\t\n\t\t//\n\t\t// $(document).on('click', function(evt) {\n\t\t// \talert(main.getClicked3DPoint(evt));\n\t\t// })\n\t})\n});\n"]},"metadata":{},"sourceType":"module"}